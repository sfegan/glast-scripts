#!/bin/bash

# qanalyze_sge.sh - queue a GLAST analysis run on the Lyon cluster
#                 - SGE version
# Stephen Fegan - sfegan@llr.in2p3.fr - 2008-10-21
# $Id: qanalyze.sh 2894 2011-06-07 15:06:43Z sfegan $

PWD=`/bin/pwd`
CP='cp -pv'

CMD_RA="$1"
CMD_DEC="$2"
CMD_NAME=`sanitize_name.sh "$3"`
CMD_DIR="$4"

if test "$CMD_RA" == "" -o "$CMD_DEC" == "" -o "$CMD_NAME" == "" -o "$CMD_DIR" == ""
then
  echo "usage: $0 ra dec source_name output_directory [settings]"
  exit
fi

ALLARGS="$@"

shift
shift
shift
shift

ARGS="$@"

if test -f $HOME/.qanalyzerc
then
  . $HOME/.qanalyzerc
fi

while test $# -ne 0
do
  var=`echo "$1" | cut -d= -f1`
  if test "$var" == "RESTART" -o "$var" == "TIMELIMIT" \
       -o "$var" == "MEMLIMIT" -o "$var" == "SCRLIMIT" \
       -o "$var" == "JOBPREFIX" -o "$var" == "CPUPLATFORM" \
       -o "$var" == "QSUB" -o "$var" == "Q"
  then
    export "$1"
  fi
  shift
done

if test "$RESTART" \!= ""
then
  RESTART=`echo $RESTART | tr '[:lower:]' '[:upper:]'`
fi

if test \! -d "$CMD_DIR"
then
  echo Directory does not exists: "$CMD_DIR"
  exit
fi

if test "$Q" \!= ""
then
 if test "$Q" == "T"; then Q=long; fi
 if test "$Q" == "G"; then Q=medium; fi
fi

if test "$CPUPLATFORM" == "LINUX"; then CPUPLATFORM="sl5"; fi

if test "$Q" \!= ""
then
  if test "$TIMELIMIT"   == ""; then TIMELIMIT=MAX${Q}; fi
  if test "$MEMLIMIT"    == ""; then MEMLIMIT=MAX${Q}; fi
  if test "$SCRLIMIT"    == ""; then SCRLIMIT=MAX${Q}; fi
fi

if test "$TIMELIMIT"   == ""; then TIMELIMIT=MAXmedium; fi
if test "$TIMELIMIT"   == "MAX"; then TIMELIMIT="MAXlong"; fi
if test "$MEMLIMIT"    == ""; then MEMLIMIT=MAXmedium; fi
if test "$SCRLIMIT"    == ""; then SCRLIMIT=MAXmedium; fi
if test "$CPUPLATFORM" == ""; then CPUPLATFORM="sl5"; fi
if test "$QSUB"        == ""; then QSUB="qsub"; fi

# Derived from "qconf -sq medium"
if test "$TIMELIMIT"   == "MAXmedium"; then TIMELIMIT=05:00:00; fi
if test "$MEMLIMIT"    == "MAXmedium"; then MEMLIMIT=3G; fi
if test "$SCRLIMIT"    == "MAXmedium"; then SCRLIMIT=30G; fi

# Derived from "qconf -sq long"
if test "$TIMELIMIT"   == "MAXlong"; then TIMELIMIT=30:00:00; fi
if test "$MEMLIMIT"    == "MAXlong"; then MEMLIMIT=4G; fi
if test "$SCRLIMIT"    == "MAXlong"; then SCRLIMIT=30G; fi

# Derived from "qconf -sq huge"
if test "$TIMELIMIT"   == "MAXlong"; then TIMELIMIT=48:00:00; fi
if test "$MEMLIMIT"    == "MAXlong"; then MEMLIMIT=110G; fi
if test "$SCRLIMIT"    == "MAXlong"; then SCRLIMIT=30G; fi

# Derived from "qconf -sq longlived"
if test "$TIMELIMIT"   == "MAXlong"; then TIMELIMIT=168:00:00; fi
if test "$MEMLIMIT"    == "MAXlong"; then MEMLIMIT=6G; fi
if test "$SCRLIMIT"    == "MAXlong"; then SCRLIMIT=30G; fi

OUTDIR=`cd "$CMD_DIR"; /bin/pwd`
SCRIPTDIR=`dirname $0`

if test "$JOBPREFIX" == ""
then
  JOBNAME="${CMD_NAME}"
else
  JOBNAME="${JOBPREFIX}_${CMD_NAME}"
fi

if test "$JOBNAME" == ""; then JOBNAME="GLAST"; fi
if test "$JOBNAME" == "NONE"; then JOBNAME="_NONE"; fi

LIMITOPT="-l ct=${TIMELIMIT} -l vmem=${MEMLIMIT} -l fsize=${SCRLIMIT}"
if test "$Q" \!= ""
then
  LIMITOPT="${LIMITOPT} -q $Q"
fi

# *****************************************************************************
# *****************************************************************************
#
# SCRIPT STARTS HERE
#
# *****************************************************************************
# *****************************************************************************

#cat <<EOF
${QSUB} <<EOF
#!/bin/bash
#$ -P P_glast -l sps=1
#$ $LIMITOPT
#$ -o $PWD -e $PWD -j yes
#$ -N $JOBNAME

# -l os=${CPUPLATFORM}

###############################################################################
# Script automatically generated by $0 on behalf of $USER
###############################################################################

echo '************************************************************************'
echo '$0 $ALLARGS'
echo 'Submitted from: '"`hostname`"
echo -n 'Running on:     '
hostname
echo -n 'Uptime:        '
uptime
echo '************************************************************************'
echo ""

if test "$GLAST_SCI" \!= ""
then
  export GLAST_SCI="$GLAST_SCI"
fi
if test "$GLAST_BIN" \!= ""
then
  export GLAST_BIN="$GLAST_BIN"
fi
if test "$GLAST_REL" \!= ""
then
  export GLAST_REL="$GLAST_REL"
fi
if test "$GLAST_EXT" \!= ""
then
  export GLAST_EXT="$GLAST_EXT"
fi
if test "$ROOTSYS" \!= ""
then
  export ROOTSYS="$ROOTSYS"
fi
if test "$HEADAS" \!= ""
then
  export HEADAS="$HEADAS"
  . \$HEADAS/headas-init.sh
fi
if test "$PATH" \!= ""
then
  export PATH="$PATH"
fi
if test "$LD_LIBRARY_PATH" \!= ""
then
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
fi

#if test "\$HEADAS" == ""
#then
#  export GLAST_SCI="$GLAST_SCI"
#  export GLAST_REL="$GLAST_REL"
#  export GLAST_EXT="$GLAST_EXT"
#  export HEADAS="$HEADAS"
#  . \$HEADAS/headas-init.sh
#  export PATH=\$HOME/bin:\$HOME/scripts:\$GLAST_SCI/bin:\$GLAST_REL/bin:\$PATH
#fi

PFILES=.:\$PFILES
cd \$TMPDIR

if test "$RESTART" \!= "" -a "$RESTART" \!= "NOCOPY"
then
  CMD="$CP $OUTDIR/${CMD_NAME}* $OUTDIR/model.xml ."
  echo \$CMD
  \$CMD
elif test "$RESTART" \!= "NOCOPY"
then
  CMD="$CP $OUTDIR/${CMD_NAME}_model.xml $OUTDIR/model.xml ."
  echo \$CMD
  \$CMD
  CMD="$CP $OUTDIR/${CMD_NAME}_analysis*.log ."
  echo \$CMD
  \$CMD
fi

logi=0
while test -f ${CMD_NAME}_analysis_\${logi}.log
do
  logi=\$((logi+1))
done

cp $SCRIPTDIR/analyze_field.sh .
./analyze_field.sh "$CMD_RA" "$CMD_DEC" "$CMD_NAME" $ARGS 2>&1 | tee ${CMD_NAME}_analysis_\${logi}.log

CMD="$CP * $OUTDIR"
echo \$CMD
\$CMD

EOF
